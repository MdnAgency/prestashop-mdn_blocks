<?php
require_once _PS_MODULE_DIR_ . '/mdn_blocks/classes/BlocksModel.php';
use PrestaShop\PrestaShop\Core\Module\WidgetInterface;

if (!defined('_PS_VERSION_')) {
    exit;
}
class Mdn_Blocks extends Module implements WidgetInterface {
    const SLIDER_CONTROLLER = "AdminBlocks";

    public function __construct()
    {
        $this->name = 'mdn_blocks';
        $this->author = 'Maison du Net - Loris';
        $this->tab = 'front_office_features';
        $this->version = '1.0.0';
        $this->bootstrap = true;
        $this->ps_versions_compliancy = array('min' => '1.7.7.0', 'max' => _PS_VERSION_);
        parent::__construct();

    }


    public function install()
    {
        $this->installModuleTab(self::SLIDER_CONTROLLER, 'Blocs', Tab::getIdFromClassName('IMPROVE'));
        BlocksModel::createContentTable();

        return parent::install(); // TODO: Change the autogenerated stub
    }

    public function uninstall()
    {
        $this->uninstallModuleTab(self::SLIDER_CONTROLLER);
        return parent::uninstall(); // TODO: Change the autogenerated stub
    }


    public function renderWidget($hookName = null, array $configuration = [])
    {
        if (!$this->active) {
            return;
        }

        $this->smarty->assign($this->getWidgetVariables($hookName, $configuration));

        return $this->display(__FILE__, 'views/templates/widget/blocks.tpl');
    }


    public function getWidgetVariables($hookName, array $configuration)
    {
        $Slider =  new PrestaShopCollection('BlocksModel');
        $results = $Slider
            ->where('active_block', '=', '1')
            ->where('id', '=', strtoupper($hookName))
            ->getAll();

        $lang = Configuration::get('PS_LANG_DEFAULT');


        return ['results' => array_map(function ($v) use($lang) {
            return [
                'content' => $v->content[$lang],
                'class' => $v->class
            ];
        }, $results->getResults()), 'lang' => $lang];
    }


    private function installModuleTab($tabClass = null, $tabName = null, $idTabParent = 0)
    {
        $pass = true;
        $tabNameLang = array();

        if ( Tab::getIdFromClassName($tabClass) )   return(true) ;

        //@copy(_PS_MODULE_DIR_ . $this->name . '/images/a16.gif', _PS_IMG_DIR_ . 't/' . $tabClass . '.gif');

        foreach (Language::getLanguages() as $language)
            $tabNameLang[$language['id_lang']] = $this->l($tabName);

        $tab = new Tab();
        $tab->name = $tabNameLang;
        $tab->class_name = $tabClass;
        $tab->module = $this->name;
        $tab->id_parent = (int) $idTabParent;

        // For Prestashop 1.2
        //
        if ( version_compare(_PS_VERSION_, '1.3', '<') )
            $pass = $tab->add();
        else
            $pass = $tab->save();

        return($pass);
    }

    private function uninstallModuleTab($tabClass)
    {
        $pass = true;
        //@unlink(_PS_IMG_DIR_ . 't/' . $tabClass . '.gif');
        $idTab = Tab::getIdFromClassName($tabClass);
        if ($idTab != 0)
        {
            $tab = new Tab($idTab);
            $pass = $tab->delete();
        }
        return($pass);
    }
}